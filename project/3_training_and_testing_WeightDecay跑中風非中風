{"cells":[{"cell_type":"markdown","metadata":{"id":"YCjLyz1z3dB3"},"source":["# Training and Testing\n","\n","Action items\n","- Dataset\n","- Model\n","- DataLoader\n","- Training\n","- Testing"]},{"cell_type":"markdown","metadata":{"id":"TXVRx2KI5TXh"},"source":["## Dataset"]},{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":1948,"status":"ok","timestamp":1659535069470,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"BmzBt1ou5SP0"},"outputs":[],"source":["import glob\n","import os\n","\n","import numpy as np\n","from PIL import Image\n","import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","import torchvision\n","from torchvision.models import resnet18, resnet50, resnet101, resnet152\n","from torch.utils.data import Dataset, DataLoader\n","import matplotlib.pyplot as plt\n","from tqdm.notebook import tqdm, trange\n","from sklearn.metrics import confusion_matrix\n","import random\n","\n","# Seed\n","seed = 2022\n","torch.manual_seed(seed)\n","torch.cuda.manual_seed(seed)\n","torch.cuda.manual_seed_all(seed)\n","np.random.seed(seed)\n","random.seed(seed)\n","torch.backends.cudnn.benchmark = False\n","torch.backends.cudnn.deterministic = True"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3960,"status":"ok","timestamp":1659535073425,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"DJ0FI4CMYroX","outputId":"f489596e-0b0a-4b74-f24e-303dd54e7813"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive', force_remount=True)\n","\n","FOLDERNAME = 'Colab\\ Notebooks/3_Split'"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1659535073425,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"BctYFtp5ZmhU","outputId":"48649ba8-f036-45f7-feb0-59aa45f6f8e0"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/MyDrive/Colab Notebooks/3_Split\n"]}],"source":["%cd drive/MyDrive/$FOLDERNAME"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":3,"status":"ok","timestamp":1659535073425,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"P39uJuXoZvvK"},"outputs":[],"source":["# %ls"]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1659535073426,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"5Mgsaj5g7wll"},"outputs":[],"source":["label_dict = {\n","    \"Non-stroke\": 0,\n","    \"ICH\": 1,\n","    \"Ischemic\": 1,\n","}"]},{"cell_type":"code","execution_count":6,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1659535073426,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"nV0MiaOg5Fro"},"outputs":[],"source":["class ECGDataset(Dataset):\n","\n","    def __init__(self, data_path, label_dict):\n","        self.files = sorted(glob.glob(os.path.join(data_path, \"*.jpg\")))\n","        self.n = len(self.files)\n","        self.label_dict = label_dict\n","\n","    def __len__(self):\n","        return self.n\n","\n","    def __getitem__(self, idx):\n","        img = Image.open(self.files[idx])\n","        x = 1.0 - torchvision.transforms.ToTensor()(img)\n","        # x = x.squeeze()\n","        # x = x.T\n","        # x = x.unsqueeze(0)\n","        with open(self.files[idx].replace(\".jpg\", \".txt\")) as f:\n","            label = f.read()\n","        y = self.label_dict[label]\n","        return x, y"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":471,"status":"ok","timestamp":1659535073893,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"WLq6A0k16hGH","outputId":"c39ba32b-cb81-4202-81d9-c3b317bc6515"},"outputs":[{"name":"stdout","output_type":"stream","text":["ds_train 3351\n"]}],"source":["ds_train = ECGDataset(\"Train_oversample\", label_dict)\n","print(\"ds_train\", len(ds_train))"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1659535073893,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"ANaI1bdNYu9_","outputId":"139eefb0-22b1-4576-8674-6e397e12bfee"},"outputs":[{"name":"stdout","output_type":"stream","text":["ds_val 243\n"]}],"source":["ds_val = ECGDataset(\"Val\", label_dict)\n","print(\"ds_val\", len(ds_val))"]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":2,"status":"ok","timestamp":1659535073893,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"DhbbTPNp6pBa"},"outputs":[],"source":["\n","\n","# fig = plt.figure(figsize=(20, 15))\n","# for i in range(16):\n","#     x, y = ds_train[i]\n","#     plt.subplot(4, 4, i + 1)\n","#     plt.imshow(x[0, :, :])\n","#     plt.text(100, 100, y, fontsize=20, color=\"w\")\n","#     # plt.colorbar()\n","#     plt.axis(\"off\")"]},{"cell_type":"markdown","metadata":{"id":"UAUlVFPU8RYr"},"source":["## Model"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":776,"status":"ok","timestamp":1659535074667,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"XPXdB5_C6sz-","outputId":"92f1f325-71e9-4839-950d-c9b6f5a8d04d"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/torchvision/models/_utils.py:209: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.\n","  f\"The parameter '{pretrained_param}' is deprecated since 0.13 and will be removed in 0.15, \"\n","/usr/local/lib/python3.7/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=None`.\n","  warnings.warn(msg)\n"]}],"source":["model = resnet50(pretrained=False)\n","model.conv1 = nn.Conv2d(1, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n","model.fc = nn.Linear(in_features=model.fc.in_features, out_features=2, bias=True)"]},{"cell_type":"code","execution_count":11,"metadata":{"executionInfo":{"elapsed":2,"status":"ok","timestamp":1659535074667,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"-H1kryBF6AV7"},"outputs":[],"source":["# class RNN(nn.Module):\n","#   def __init__(self, input_size, hidden_size, output_size):\n","#     super().__init__()\n","#     self.lstm = nn.LSTM(input_size, hidden_size, batch_first = True)\n","#     self.fc = nn.Linear(hidden_size, output_size)\n","#   def forward(self, x):\n","#     # N x 1 x 1024 x 640\n","#     x = x.squeeze(1)\n","#     # N x 1024 x 640\n","#     output, _ = self.lstm(x)\n","#     out = output[:,-1, :]\n","#     return self.fc(out)"]},{"cell_type":"code","execution_count":12,"metadata":{"executionInfo":{"elapsed":3,"status":"ok","timestamp":1659535074668,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"Gp1WxRSDwZVZ"},"outputs":[],"source":["# class MyModel(nn.Module):\n","#   def __init__(self, input_size, hidden_size, output_size):\n","#     super().__init__()\n","#     self.conv2d1 = nn.Conv2d(1, 64, 3, 1, 1)\n","#     self.batch_norm2d1 = nn.BatchNorm2d(64)\n","#     self.conv2d2 = nn.Conv2d(64, 1, 3, 1, 1)\n","#     self.batch_norm2d2 = nn.BatchNorm2d(1)\n","#     self.lstm = nn.LSTM(input_size, hidden_size, batch_first = True)\n","#     self.fc = nn.Linear(hidden_size, output_size)\n","#   def forward(self, x):\n","#     # N x 1 x 1024 x 640\n","#     out = self.conv2d1(x)\n","#     # N x 64 x 1024 x 640\n","#     out = self.batch_norm2d1(out)\n","#     out = nn.functional.relu(out)\n","#     # N x 1 x 1024 x 640\n","#     out = self.conv2d2(out)\n","#     out = self.batch_norm2d2(out)\n","#     out = nn.functional.relu(out)\n","#     out = nn.functional.max_pool2d(out, (2,2))\n","#     # N x 1 x 512 x 320\n","#     out = out.squeeze(1)\n","#     # N x 512 x 320\n","#     output, _ = self.lstm(out)\n","#     out = output[:,-1, :]\n","#     return self.fc(out)"]},{"cell_type":"code","execution_count":13,"metadata":{"executionInfo":{"elapsed":2,"status":"ok","timestamp":1659535074668,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"87b7B9gpxsIU"},"outputs":[],"source":["# model = MyModel(320, 64, 3)\n","# model = RNN(640, 256, 3)\n","# model"]},{"cell_type":"code","execution_count":14,"metadata":{"executionInfo":{"elapsed":2,"status":"ok","timestamp":1659535074668,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"8TPyIYIVGG8S"},"outputs":[],"source":["## 如果要load特定model 請改back up之model名\n","# model.load_state_dict(torch.load(\"backup_RNN_0.0005_012000.pth\"))"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1659535074668,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"nNE3p19t9DQW","outputId":"52bbec0e-deaf-427a-f21b-16c517a91756"},"outputs":[{"data":{"text/plain":["torch.Size([1, 1, 640, 1024])"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["x, y = ds_train[0]\n","x = x.unsqueeze(0)\n","x.size()"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4811,"status":"ok","timestamp":1659535079477,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"2ZI2bpWy-o1i","outputId":"e474d710-f7f5-46dd-ab8a-2cd5b7356b1c"},"outputs":[{"name":"stdout","output_type":"stream","text":["outputs tensor([[ 0.3191, -0.5079]], grad_fn=\u003cAddmmBackward0\u003e)\n"]}],"source":["out = model(x)\n","print(\"outputs\", out)"]},{"cell_type":"code","execution_count":17,"metadata":{"executionInfo":{"elapsed":15,"status":"ok","timestamp":1659535079477,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"CsiDj8W1-tfa"},"outputs":[],"source":["# outputs"]},{"cell_type":"code","execution_count":18,"metadata":{"executionInfo":{"elapsed":2581,"status":"ok","timestamp":1659535082044,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"tmzi3wnL-3tA"},"outputs":[],"source":["device = torch.device(\"cuda:0\")\n","model = model.to(device)"]},{"cell_type":"markdown","metadata":{"id":"Pv9bycTV_I0Q"},"source":["## DataLoader"]},{"cell_type":"code","execution_count":19,"metadata":{"executionInfo":{"elapsed":9,"status":"ok","timestamp":1659535082046,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"X8NS2sEnXsLu"},"outputs":[],"source":["def dataloader(dataset, mode='Train'):\n","  if mode == 'Train':\n","    dl_data = DataLoader(\n","    dataset,\n","    batch_size=4,\n","    shuffle=True,\n","    drop_last=True\n","    )\n","    return dl_data\n","  elif mode == 'Val':\n","    dl_data = DataLoader(\n","    dataset,\n","    batch_size=4,\n","    shuffle=False,\n","    drop_last=False,\n","    )\n","    return dl_data\n"]},{"cell_type":"code","execution_count":20,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1659535082047,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"tSIA28toYdkZ"},"outputs":[],"source":["dl_train = dataloader(ds_train, mode = 'Train')\n","dl_val = dataloader(ds_val, mode = 'Val')"]},{"cell_type":"code","execution_count":21,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1659535082047,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"yWmVeFBH_Dvb"},"outputs":[],"source":["# dl_train = DataLoader(\n","#     ds_train,\n","#     batch_size=4,\n","#     shuffle=True,\n","#     drop_last=True\n","# )\n","# iterable = iter(dl_train)\n","# tensor, lable = next(iterable)\n","# tensor.shape\n"]},{"cell_type":"markdown","metadata":{"id":"Iv7R32k1_ki1"},"source":["## Train"]},{"cell_type":"code","execution_count":22,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1659535082047,"user":{"displayName":"Code Stan","userId":"03254598658053359229"},"user_tz":-480},"id":"2IWRLrWCY3BL"},"outputs":[],"source":["# def training(n_epoch, lr, print_every, backup_every, model, optimizer, loss_fn, traing_data, val_data):\n","#   j_train_list = []\n","#   j_val_loss = []\n","\n","#   seen_batch = 0\n","\n","#   model.train()\n","#   for i in range(n_epoch):\n","#       j = 0\n","#       for (x, y) in tqdm(traing_data):\n","#           optimizer.zero_grad()\n","#           x = x.to(device)\n","#           y = y.to(device)\n","#           outputs = model(x)\n","#           loss = loss_fn(outputs, y)\n","#           j += loss\n","#           loss.backward()\n","#           optimizer.step()\n","#           with torch.no_grad():\n","#               seen_batch = seen_batch + 1\n","#               if seen_batch % print_every == 0:\n","#                   print(i, \"epoch: loss\", loss.item())\n","#               if seen_batch % backup_every == 0:\n","#                   torch.save(model.state_dict(), \"backup_RNN_0.0005_{:06d}.pth\".format(seen_batch))\n","#       j /= len(dl_train)\n","#       j_train_list.append(j)\n","#       cost_val = val(model, val_data)\n","#       print(i, \"epoch: cost_val\", loss.item())\n","#   return j_train_list, j_val_loss"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":49},"id":"BmQ7TS_B_j33"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a7dffa3060124c63b685c3799e606317","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["0 epoch: loss 0.21458807587623596\n","0 epoch: loss 0.8106702566146851\n","0 epoch: loss 0.6265860795974731\n","0 epoch: loss 0.3883744478225708\n","0 epoch: loss 0.4822586178779602\n","0 epoch: loss 0.5567566752433777\n","0 epoch: loss 0.3136395812034607\n","0 epoch: loss 0.772563099861145\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ca80f19b37e64060a5c4696f5fe7ea19","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["1 epoch: loss 0.9938391447067261\n","1 epoch: loss 0.5053236484527588\n","1 epoch: loss 0.6548834443092346\n","1 epoch: loss 0.21982614696025848\n","1 epoch: loss 0.7291233539581299\n","1 epoch: loss 0.35725638270378113\n","1 epoch: loss 0.6697479486465454\n","1 epoch: loss 0.34456485509872437\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2643e1b6115049fa979d5cfb4356db99","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["2 epoch: loss 0.46898651123046875\n","2 epoch: loss 0.530240535736084\n","2 epoch: loss 0.516431987285614\n","2 epoch: loss 1.1328781843185425\n","2 epoch: loss 0.8155585527420044\n","2 epoch: loss 0.5099509954452515\n","2 epoch: loss 0.24562594294548035\n","2 epoch: loss 0.33328777551651\n","2 epoch: loss 1.3110809326171875\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8a3b240850b04ecda748463954d5ae23","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["3 epoch: loss 0.25580674409866333\n","3 epoch: loss 0.8033369779586792\n","3 epoch: loss 0.24706915020942688\n","3 epoch: loss 0.19692884385585785\n","3 epoch: loss 0.1962607353925705\n","3 epoch: loss 0.11417604237794876\n","3 epoch: loss 0.3234657049179077\n","3 epoch: loss 0.27623048424720764\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e3c09b4c67db41f2bdedbce8bb313dfc","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["4 epoch: loss 0.22818611562252045\n","4 epoch: loss 0.2110566347837448\n","4 epoch: loss 0.2893257737159729\n","4 epoch: loss 0.1221952885389328\n","4 epoch: loss 0.100154809653759\n","4 epoch: loss 0.04047277569770813\n","4 epoch: loss 0.04918399825692177\n","4 epoch: loss 0.029240339994430542\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cd20afa9cfee4ec7b3cbe2e4e69136b4","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["5 epoch: loss 0.16084572672843933\n","5 epoch: loss 0.03371220454573631\n","5 epoch: loss 0.1282503306865692\n","5 epoch: loss 0.01091804914176464\n","5 epoch: loss 0.08189298957586288\n","5 epoch: loss 0.3998250663280487\n","5 epoch: loss 0.09398823976516724\n","5 epoch: loss 0.45724618434906006\n","5 epoch: loss 0.08347071707248688\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"54db75c8c2734c5fa7d1f2c84211826e","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["6 epoch: loss 0.04773562401533127\n","6 epoch: loss 0.02233840525150299\n","6 epoch: loss 0.0012171597918495536\n","6 epoch: loss 0.07815771549940109\n","6 epoch: loss 0.04363643750548363\n","6 epoch: loss 0.020223939791321754\n","6 epoch: loss 0.008815372362732887\n","6 epoch: loss 0.004187801852822304\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"743292acb6ce4f4da9650c2e168c9c1a","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["7 epoch: loss 0.005718064494431019\n","7 epoch: loss 0.0003831399080809206\n","7 epoch: loss 0.0007984886760823429\n","7 epoch: loss 0.012566588819026947\n","7 epoch: loss 0.04651862755417824\n","7 epoch: loss 0.00931849516928196\n","7 epoch: loss 0.1215866357088089\n","7 epoch: loss 0.07431980967521667\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b1833053fe5442599f443674ee9ce1f7","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["8 epoch: loss 0.004829461686313152\n","8 epoch: loss 0.02524806745350361\n","8 epoch: loss 0.002107143634930253\n","8 epoch: loss 0.07714872062206268\n","8 epoch: loss 0.0001484920794609934\n","8 epoch: loss 0.003315441310405731\n","8 epoch: loss 0.0004142231191508472\n","8 epoch: loss 0.3125309646129608\n","8 epoch: loss 0.075090691447258\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"54b67ef7d0574968be878e1cf8a479c2","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["9 epoch: loss 0.013541791588068008\n","9 epoch: loss 0.03197343647480011\n","9 epoch: loss 0.0013920245692133904\n","9 epoch: loss 0.04075540229678154\n","9 epoch: loss 0.0010415023425593972\n","9 epoch: loss 0.007161491550505161\n","9 epoch: loss 0.014433315023779869\n","9 epoch: loss 0.0002560943248681724\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0ba32c653d83448798ca743cd6846574","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["10 epoch: loss 0.002024182118475437\n","10 epoch: loss 0.0017676858697086573\n","10 epoch: loss 0.11153342574834824\n","10 epoch: loss 0.016216576099395752\n","10 epoch: loss 0.01153551321476698\n","10 epoch: loss 0.00011454883497208357\n","10 epoch: loss 9.613146539777517e-05\n","10 epoch: loss 0.010409548878669739\n","10 epoch: loss 0.3623126149177551\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"f7586c458380429394eec87e64b962cb","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["11 epoch: loss 0.0004329124931246042\n","11 epoch: loss 0.008702538907527924\n","11 epoch: loss 0.00028729235054925084\n","11 epoch: loss 3.358532194397412e-05\n","11 epoch: loss 5.620466617983766e-05\n","11 epoch: loss 0.00034217091160826385\n","11 epoch: loss 0.00272732088342309\n","11 epoch: loss 0.00031140464125201106\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c996628ffd484c6392efbaf2debac2b9","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["12 epoch: loss 0.0002499697729945183\n","12 epoch: loss 0.000749744416680187\n","12 epoch: loss 0.0012412683572620153\n","12 epoch: loss 0.15507733821868896\n","12 epoch: loss 0.01355916727334261\n","12 epoch: loss 0.0013641269179061055\n","12 epoch: loss 0.01623356156051159\n","12 epoch: loss 0.013778888620436192\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"96901151b55749c68f39f7ee32988f25","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["13 epoch: loss 2.7536227207747288e-05\n","13 epoch: loss 0.0004842439666390419\n","13 epoch: loss 0.00028681184630841017\n","13 epoch: loss 0.003714430145919323\n","13 epoch: loss 0.0003173774457536638\n","13 epoch: loss 0.006820523180067539\n","13 epoch: loss 0.001084573334082961\n","13 epoch: loss 0.00045067412429489195\n","13 epoch: loss 0.0011429175501689315\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d2772777a6434517807fd80df74104fd","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["14 epoch: loss 2.7060072170570493e-05\n","14 epoch: loss 0.02202332206070423\n","14 epoch: loss 0.06335050612688065\n","14 epoch: loss 0.0024873330257833004\n","14 epoch: loss 0.2951866388320923\n","14 epoch: loss 0.008476927876472473\n","14 epoch: loss 0.0001015566085698083\n","14 epoch: loss 0.0022693644277751446\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"43cd7eb6a8f047ac8c60a11b25f3b69d","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["15 epoch: loss 0.009883231483399868\n","15 epoch: loss 6.898538413224742e-05\n","15 epoch: loss 0.0019061235943809152\n","15 epoch: loss 0.008311682380735874\n","15 epoch: loss 0.004106556531041861\n","15 epoch: loss 0.04177723824977875\n","15 epoch: loss 0.0003968641976825893\n","15 epoch: loss 0.0008274228894151747\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0f900711d5a94858a2115be8c2c42ef1","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["16 epoch: loss 0.6304985880851746\n","16 epoch: loss 8.55843027238734e-05\n","16 epoch: loss 0.00847879983484745\n","16 epoch: loss 0.007149446755647659\n","16 epoch: loss 0.005882328376173973\n","16 epoch: loss 0.0010876217857003212\n","16 epoch: loss 0.000673451111651957\n","16 epoch: loss 0.0018633329309523106\n","16 epoch: loss 0.0002893660857807845\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"23e4896eaf8d481a9a0fd78648cdc62b","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["17 epoch: loss 0.001086209318600595\n","17 epoch: loss 0.00027349876472726464\n","17 epoch: loss 9.747331205289811e-05\n","17 epoch: loss 0.002588219242170453\n","17 epoch: loss 0.009631423279643059\n","17 epoch: loss 0.007512446027249098\n","17 epoch: loss 0.0006140006007626653\n","17 epoch: loss 0.0009957639267668128\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"154990d0543c409797854479036b1cdd","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["18 epoch: loss 0.011645693331956863\n","18 epoch: loss 0.15654239058494568\n","18 epoch: loss 0.004184539895504713\n","18 epoch: loss 0.16371071338653564\n","18 epoch: loss 0.2483828067779541\n","18 epoch: loss 0.019959524273872375\n","18 epoch: loss 0.001214203191921115\n","18 epoch: loss 1.4513329915644135e-05\n","18 epoch: loss 0.0002670125977601856\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"51d78159cff34bb18a170bedf3cf1bcc","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/837 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["19 epoch: loss 0.0008667830261401832\n","19 epoch: loss 0.2054632604122162\n","19 epoch: loss 0.0008905016584321856\n","19 epoch: loss 0.0006613790756091475\n","19 epoch: loss 0.47944334149360657\n","19 epoch: loss 0.05965695157647133\n","19 epoch: loss 0.06086248904466629\n","19 epoch: loss 0.0006575003499165177\n"]}],"source":["n_epoch = 20\n","lr = 0.0001\n","print_every = 100\n","backup_every = 2000\n","model_name = 'backup_resnet50_20_1e-4_wd1E-7_中風非中風'\n","j_list = []\n","\n","optimizer = optim.Adam(model.parameters(), lr=lr, weight_decay=1e-7)\n","# optimizer = optim.Adam(model.parameters(), lr=lr)\n","loss_fn = nn.CrossEntropyLoss()\n","\n","seen_batch = 0\n","\n","model.train()\n","for i in range(n_epoch):\n","    j = 0\n","    for (x, y) in tqdm(dl_train):\n","        optimizer.zero_grad()\n","        x = x.to(device)\n","        y = y.to(device)\n","        outputs = model(x)\n","        loss = loss_fn(outputs, y)\n","        j += loss\n","        loss.backward()\n","        optimizer.step()\n","        with torch.no_grad():\n","            seen_batch = seen_batch + 1\n","            if seen_batch % print_every == 0:\n","                print(i, \"epoch: loss\", loss.item())\n","            if seen_batch % backup_every == 0:\n","                torch.save(model.state_dict(), \"{}_{:06d}.pth\".format(model_name, seen_batch))\n","    j /= len(dl_train)\n","    j_list.append(j)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"m0w6ogJ8Wbfw"},"outputs":[{"data":{"image/png":"\n","text/plain":["\u003cFigure size 432x288 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["# plot the cost history\n","from matplotlib.ticker import MaxNLocator\n","plt.plot([j_list[i].item() for i in range(len(j_list))])\n","plt.gca().xaxis.set_major_locator(MaxNLocator(integer=True))\n","plt.gca().yaxis.set_major_locator(MaxNLocator(integer=True))\n","\n","plt.xlabel('iteration')\n","plt.ylabel('training cost')\n","plt.title('Training Cost history')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"lvs7Q7UgCM_o"},"source":["## Validation"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Qpln2j9HBQ-4"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e74fb5a0312a403d8f07eadcc1bd37f2","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/61 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"}],"source":["model.eval()\n","\n","predictions = []\n","\n","with torch.no_grad():\n","    for (x, y) in tqdm(dl_val):\n","        x = x.to(device)\n","        y = y.to(device)\n","        outputs = model(x)\n","        predictions.append(outputs)\n","        "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"_CcCiP5fC5Tr"},"outputs":[],"source":["predictions = np.concatenate([p.cpu().numpy() for p in predictions], axis=0)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"ufhmDxDXC-YL"},"outputs":[],"source":["# predictions.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"K444FB4dDOsm"},"outputs":[],"source":["probs = np.exp(predictions)\n","probs = probs / np.sum(probs, axis=1, keepdims=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"AEtYHhZADTP5"},"outputs":[{"data":{"text/plain":["array([0.9507854 , 0.04921464], dtype=float32)"]},"execution_count":29,"metadata":{},"output_type":"execute_result"}],"source":["probs[0, :]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"rDej1c1xDhyn"},"outputs":[],"source":["labels = [y for _, y in ds_val]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"-7-Cda8wD05f"},"outputs":[],"source":["preds = np.argmax(probs, axis=1)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"nFt5qJgbEF4U"},"outputs":[{"data":{"text/plain":["array([[37, 37],\n","       [74, 95]])"]},"execution_count":32,"metadata":{},"output_type":"execute_result"}],"source":["cm = confusion_matrix(labels, preds, normalize=\"true\")\n","cm_n = confusion_matrix(labels, preds)\n","\n","cm_n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Ul7IfyAjUDij"},"outputs":[{"data":{"text/plain":["array([[0.5       , 0.5       ],\n","       [0.43786982, 0.56213018]])"]},"execution_count":33,"metadata":{},"output_type":"execute_result"}],"source":["cm"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"o7hAoZ37EKiI"},"outputs":[],"source":["acc = np.sum(labels == preds) / len(labels)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"PtrsMvK_Q5Ki"},"outputs":[{"data":{"text/html":["\n","  \u003cdiv id=\"df-baa4fb73-4a74-43f6-b75b-972d08fbc5dd\"\u003e\n","    \u003cdiv class=\"colab-df-container\"\u003e\n","      \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003epred\u003c/th\u003e\n","      \u003cth\u003elabels\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e...\u003c/th\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","      \u003ctd\u003e...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e238\u003c/th\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e239\u003c/th\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e240\u003c/th\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e241\u003c/th\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e242\u003c/th\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003cp\u003e243 rows × 2 columns\u003c/p\u003e\n","\u003c/div\u003e\n","      \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-baa4fb73-4a74-43f6-b75b-972d08fbc5dd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\"\u003e\n","        \n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M0 0h24v24H0V0z\" fill=\"none\"/\u003e\n","    \u003cpath d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/\u003e\u003cpath d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/\u003e\n","  \u003c/svg\u003e\n","      \u003c/button\u003e\n","      \n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","      \u003cscript\u003e\n","        const buttonEl =\n","          document.querySelector('#df-baa4fb73-4a74-43f6-b75b-972d08fbc5dd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-baa4fb73-4a74-43f6-b75b-972d08fbc5dd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      \u003c/script\u003e\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n","  "],"text/plain":["     pred  labels\n","0       0       1\n","1       0       1\n","2       1       1\n","3       0       1\n","4       1       1\n","..    ...     ...\n","238     0       1\n","239     1       1\n","240     1       1\n","241     1       1\n","242     1       1\n","\n","[243 rows x 2 columns]"]},"execution_count":35,"metadata":{},"output_type":"execute_result"}],"source":["import pandas as pd\n","pred_df = pd.DataFrame(\n","    {'pred': preds.tolist(),\n","     'labels' : labels})\n","pred_df"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Ck1RDgasg-p3"},"outputs":[{"name":"stdout","output_type":"stream","text":["0.5432098765432098\n"]}],"source":["print(acc)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"JTt2HEbchAx6"},"outputs":[],"source":["pred_df.to_csv('{}.csv'.format(model_name))"]}],"metadata":{"accelerator":"GPU","colab":{"background_execution":"on","collapsed_sections":[],"name":"3_training_and_testing_WeightDecay柏翔跑中風非中風","provenance":[{"file_id":"1700nn4xe0KPJY9Bz-tyQhAvtYAU8zEyO","timestamp":1658101952497},{"file_id":"1vHHNbZaXBDydZyesnQfD2jGrOmE7SroH","timestamp":1657727835439}],"version":""},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"1c13924ed2be490db9fffc582d13ea3d":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_68695ae41a144e66b248c2f0c8e05761","placeholder":"​","style":"IPY_MODEL_c7acaeb2d98948b98f0992f21edccef7","value":" 0/837 [00:00\u0026lt;?, ?it/s]"}},"6180fbc584e4458280a33c2444e621ab":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"675d669766184c91a2eb4969e1cd842e":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"68695ae41a144e66b248c2f0c8e05761":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9796ffaabca74c1da2d1d69f392ebad0":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b925602206c44ef7964ac508c547010a","placeholder":"​","style":"IPY_MODEL_675d669766184c91a2eb4969e1cd842e","value":"  0%"}},"a7dffa3060124c63b685c3799e606317":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_9796ffaabca74c1da2d1d69f392ebad0","IPY_MODEL_fc8b9d6776e64810b1409bfa36579078","IPY_MODEL_1c13924ed2be490db9fffc582d13ea3d"],"layout":"IPY_MODEL_b8dea8728cac495e846037667334c44b"}},"b8dea8728cac495e846037667334c44b":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b925602206c44ef7964ac508c547010a":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c7acaeb2d98948b98f0992f21edccef7":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"dc1960bae6cb44a1aa9389fd298c7d9a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"fc8b9d6776e64810b1409bfa36579078":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_6180fbc584e4458280a33c2444e621ab","max":837,"min":0,"orientation":"horizontal","style":"IPY_MODEL_dc1960bae6cb44a1aa9389fd298c7d9a","value":0}}}}},"nbformat":4,"nbformat_minor":0}